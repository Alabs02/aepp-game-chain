payable contract GameBet = 

    record bet = 
        {   betAddress  : address, 
            gameType    : string,
            teamOne     : string,
            teamTwo     : string,
            teamsUrl    : string,
            gameTime    : int,
            betAmount   : int
        }

    record report = 
        {   authorAddress   :  address,
            author          :  string,
            report          :  string 
        }

    record state = 
        {   bets            : map(int, bet),
            numberOfBets    : int ,
            reports         : map(int, report),
            numberOfReports : int
        }

    entrypoint init() = 
        {   bets = {}, 
            reports = {}, 
            numberOfReports = 0,
            numberOfBets = 0 }

    entrypoint getBet(i: int) : bet = 
        switch(Map.lookup(i, state.bets))
            None => abort("There is no bet Created with this index, but you can create One thank you!")
            Some(x) => x
    
    entrypoint getReport(index : int) : report =
        switch(Map.lookup(index, state.reports ))
            None    => abort("No report found")
            Some(x) =>  x



    stateful entrypoint createBet(_type: string, _one: string, _two: string, _url: string, _gameTime: int ) = 
        let bet = { betAddress = Call.caller, gameType = _type, teamOne = _one, teamTwo = _two, teamsUrl = _url, gameTime = _gameTime,  betAmount = 0 }
        let i = getBetsLength() + 1
        put(state { bets[i] = bet, numberOfBets = i })

    entrypoint getBetsLength() : int =
        state.numberOfBets

    entrypoint getReportsLength() : int =
        state.numberOfReports



    stateful entrypoint makeReport( _author: string, _report: string, index: int) = 
        let report = { authorAddress = Call.caller, author = _author, report = _report}
        let i = getReportsLength() + 1
        put(state { reports[index] = report, numberOfReports = index})
    

        

    payable stateful entrypoint placeBet(i: int, _amount: int) =
        let bet = getBet(i)
        Chain.spend(bet.betAddress, _amount)
        let updatedBetAmount = bet.betAmount + Call.value
        let updatedBets = state.bets{ [i].betAmount = updatedBetAmount }
        put(state { bets = updatedBets})
